---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/tv/1396/similar?api_key=c29379565234e20d7cbf4f2e835c3e41&language=en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      User-Agent:
      - rest-client/2.1.0 (darwin21 x86_64) ruby/2.7.7p221
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - api.themoviedb.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 26 Nov 2022 18:49:27 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 6d50e820ac4b648f0fd613d747934398ff989f14
      X-Memc-Age:
      - '5026'
      X-Memc-Expires:
      - '10617'
      Etag:
      - W/"c5c4a18671e56476d698c9f5be3a7591"
      Vary:
      - Accept-Encoding,Accept-Encoding,Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 4fb361dabf6902582234513aa6a23540.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MAD53-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - r6ICoeOM4OufqOlivKqhvC0Ha_1rhGbZOdKXwljU6ryRpk_MVpnL2Q==
      Age:
      - '194'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 26 Nov 2022 18:52:41 GMT
recorded_with: VCR 6.1.0
