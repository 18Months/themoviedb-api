---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/movie/upcoming?api_key=c29379565234e20d7cbf4f2e835c3e41&language=en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      User-Agent:
      - rest-client/2.1.0 (darwin21 x86_64) ruby/2.7.7p221
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - api.themoviedb.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 26 Nov 2022 18:52:56 GMT
      Server:
      - openresty
      Vary:
      - Accept-Encoding,Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 fc61721a57535e7448c6b6e00cc44494.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MAD53-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - P54PmR1U8HGhaYy0z8tbupOZYUB6CBA1ekjya4jJ0crHgRHLcjxosg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 26 Nov 2022 18:52:56 GMT
recorded_with: VCR 6.1.0
