---
http_interactions:
- request:
    method: get
    uri: http://api.themoviedb.org/3/keyword/1721/movies?api_key=c29379565234e20d7cbf4f2e835c3e41&language=en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      User-Agent:
      - rest-client/2.1.0 (darwin21 x86_64) ruby/2.7.7p221
      Content-Type:
      - application/json; charset=utf-8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - api.themoviedb.org
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 26 Nov 2022 18:52:52 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - MISS, STORE
      X-Memc-Key:
      - f61c0094073ecedd02903272767b9b3bb4ca0372
      X-Memc-Age:
      - '0'
      X-Memc-Expires:
      - '16894'
      Etag:
      - W/"06a19eb087de1109f70f1df422926edd"
      Vary:
      - Accept-Encoding,Accept-Encoding,Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 4d72b0c593937086d9a41f6c893b7b14.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MAD53-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - CKonS0QDPQverdOw-sB-pCvZaa6vIcIJIV33obn6NbmZy96t1x4aMA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 26 Nov 2022 18:52:51 GMT
recorded_with: VCR 6.1.0
